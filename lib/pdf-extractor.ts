// Esta funci√≥n ya no es necesaria para extraer texto de PDFs para embeddings,
// ya que la API de Python lo har√°. Se mantiene si la necesitas para otros prop√≥sitos.
export async function extractTextFromPDF(pdfUrl: string): Promise<string> {
  try {
    console.log(`üìÑ Extrayendo texto de PDF: ${pdfUrl}`)

    const response = await fetch(pdfUrl)
    if (!response.ok) {
      throw new Error(`Error descargando PDF: ${response.status}`)
    }

    // Simulaci√≥n de extracci√≥n de texto
    const simulatedText = `
    Contenido extra√≠do del PDF: ${pdfUrl}

    Este es un texto de ejemplo que simula el contenido extra√≠do de un PDF.
    En una implementaci√≥n real, aqu√≠ estar√≠a el texto completo del documento.

    Cap√≠tulo 1: Introducci√≥n
    Este cap√≠tulo introduce los conceptos b√°sicos de la materia.

    Cap√≠tulo 2: Desarrollo
    Aqu√≠ se desarrollan los temas principales con ejemplos pr√°cticos.

    Cap√≠tulo 3: Conclusiones
    Se presentan las conclusiones y recomendaciones finales.

    Referencias bibliogr√°ficas y material adicional.
    `

    console.log(`‚úÖ Texto extra√≠do: ${simulatedText.length} caracteres`)
    return simulatedText
  } catch (error) {
    console.error("Error extrayendo texto del PDF:", error)
    throw error
  }
}

// La funci√≥n processAllPDFsForSubject ha sido eliminada,
// ya que la l√≥gica de procesamiento de embeddings se ha movido a la API de Python.
